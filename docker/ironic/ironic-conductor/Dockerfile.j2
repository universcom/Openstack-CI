FROM {{ namespace }}/{{ image_prefix }}ironic-base:{{ tag }}
{% block labels %}
LABEL maintainer="{{ maintainer }}" name="{{ image_name }}" build-date="{{ build_date }}"
{% endblock %}

{% block ironic_conductor_header %}{% endblock %}

{% import "macros.j2" as macros with context %}

{% if base_package_type == 'rpm' %}
    {% set ironic_conductor_packages = [
        'dosfstools',
        'e2fsprogs',
        'fuse',
        'gdisk',
        'ipmitool',
        'openssh-clients',
        'parted',
        'psmisc',
        'python3-systemd',
        'qemu-img',
        'systemd-udev',
        'util-linux',
        'xfsprogs',
    ] %}
{% elif base_package_type == 'deb' %}
    {% set ironic_conductor_packages = [
        'bsdmainutils',
        'dosfstools',
        'e2fsprogs',
        'gdisk',
        'ipmitool',
        'openssh-client',
        'parted',
        'psmisc',
        'python3-systemd',
        'qemu-utils',
        'shellinabox',
        'udev',
        'xfsprogs',
    ] %}
{% endif %}

{% set ironic_conductor_pip_packages = [
    '-r /ironic/driver-requirements.txt',
    'ironic-staging-drivers',
] %}

{% set ironic_conductor_plugins_pip_packages = [
'/plugins/*'
] %}

ADD plugins-archive /
RUN {{ macros.install_pip(ironic_conductor_pip_packages | customizable("pip_packages")) }} \
    && if [ "$(ls /plugins)" ]; then \
        {{ macros.install_pip(ironic_conductor_plugins_pip_packages) }}; \
    fi

{{ macros.install_packages(ironic_conductor_packages | customizable("packages")) }}

{% block ironic_conductor_footer %}{% endblock %}
{% block footer %}{% endblock %}

USER ironic
